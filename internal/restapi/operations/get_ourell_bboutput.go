// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetOurellBboutputHandlerFunc turns a function with the right signature into a get ourell bboutput handler
type GetOurellBboutputHandlerFunc func(GetOurellBboutputParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetOurellBboutputHandlerFunc) Handle(params GetOurellBboutputParams) middleware.Responder {
	return fn(params)
}

// GetOurellBboutputHandler interface for that can handle valid get ourell bboutput params
type GetOurellBboutputHandler interface {
	Handle(GetOurellBboutputParams) middleware.Responder
}

// NewGetOurellBboutput creates a new http.Handler for the get ourell bboutput operation
func NewGetOurellBboutput(ctx *middleware.Context, handler GetOurellBboutputHandler) *GetOurellBboutput {
	return &GetOurellBboutput{Context: ctx, Handler: handler}
}

/*GetOurellBboutput swagger:route GET /ourell/bboutput getOurellBboutput

TODO

TODO

*/
type GetOurellBboutput struct {
	Context *middleware.Context
	Handler GetOurellBboutputHandler
}

func (o *GetOurellBboutput) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetOurellBboutputParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
